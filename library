local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;local v30;v27=v12(v11(v27,15 -10 ),v7("\5\137","\203\43\167\55\126"),function(v42)if (v9(v42,2)==79) then local v93=0;while true do if (v93==0) then v30=v8(v11(v42,1,1));return "";end end else local v94=v10(v8(v42,16));if v30 then local v101=v13(v94,v30);v30=nil;return v101;else return v94;end end end);local function v31(v43,v44,v45)if v45 then local v95=0;local v96;while true do if (v95==0) then v96=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v96-(v96%1) ;end end else local v97=2^(v44-1) ;return (((v43%(v97 + v97))>=v97) and 1) or 0 ;end end local function v32()local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33()local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + (5 -3) ;return (v48 * 256) + v47 ;end local function v34()local v49=0;local v50;local v51;local v52;local v53;while true do if (v49==0) then v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v49=1;end if (v49==1) then return (v53 * 16777216) + (v52 * (126505 -60969)) + (v51 * (659 -403)) + v50 ;end end end local function v35()local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==3) then if (v59==0) then if (v58==(0 + 0)) then return v60 * (0 + 0) ;else local v120=0;while true do if (v120==0) then v59=1;v57=0;break;end end end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end if (v54==1) then v57=620 -(555 + 64) ;v58=(v31(v56,1,20) * (2^(963 -(857 + 74)))) + v55 ;v54=2;end if (0==v54) then v55=v34();v56=v34();v54=1;end if (v54==2) then v59=v31(v56,21,599 -(367 + 201) );v60=((v31(v56,959 -(214 + 713) )==1) and  -1) or 1 ;v54=3;end end end local function v36(v61)local v62;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;local v63={};for v77=1, #v62 do v63[v77]=v10(v9(v11(v62,v77,v77)));end return v14(v63);end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v64=0;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (v64==1) then v69=v34();v70={};for v102=1,v69 do local v103=v32();local v104;if (v103==1) then v104=v32()~=0 ;elseif (v103==2) then v104=v35();elseif (v103==3) then v104=v36();end v70[v102]=v104;end v68[1640 -(1523 + 114) ]=v32();v64=2;end if (v64==2) then for v106=1,v34() do local v107=v32();if (v31(v107,1,1)==0) then local v116=v31(v107,2,3);local v117=v31(v107,4,6);local v118={v33(),v33(),nil,nil};if (v116==0) then local v121=0;while true do if (v121==0) then v118[3]=v33();v118[4]=v33();break;end end elseif (v116==1) then v118[3 + 0 ]=v34();elseif (v116==2) then v118[3]=v34() -(2^16) ;elseif (v116==3) then v118[3]=v34() -(2^16) ;v118[4]=v33();end if (v31(v117,1,1 -0 )==(1066 -(68 + 997))) then v118[2]=v70[v118[2]];end if (v31(v117,2,2)==1) then v118[3]=v70[v118[3]];end if (v31(v117,3,3)==1) then v118[4]=v70[v118[4]];end v65[v106]=v118;end end for v108=1,v34() do v66[v108-1 ]=v39();end return v68;end if (v64==0) then v65={};v66={};v67={};v68={v65,v66,nil,v67};v64=1;end end end local function v40(v71,v72,v73)local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...)local v79=v74;local v80=v75;local v81=v76;local v82=v38;local v83=1;local v84= -1;local v85={};local v86={...};local v87=v20("#",...) -1 ;local v88={};local v89={};for v98=0 -0 ,v87 do if (v98>=v81) then v85[v98-v81 ]=v86[v98 + 1 ];else v89[v98]=v86[v98 + 1 ];end end local v90=(v87-v81) + 1 ;local v91;local v92;while true do local v99=0;while true do if (v99==1) then if (v92<=50) then if (v92<=24) then if (v92<=(11 + 0)) then if (v92<=5) then if (v92<=2) then if (v92<=0) then v89[v91[2]]=v89[v91[3]]%v89[v91[4]] ;elseif (v92>(1 + 0)) then local v180=0;local v181;local v182;while true do if (v180==0) then v181=v91[2];v182=v89[v181];v180=1;end if (v180==1) then for v429=v181 + 1 ,v84 do v15(v182,v89[v429]);end break;end end elseif (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=(960 -(892 + 65))) then v89[v91[2]]=v89[v91[3]] + v91[4] ;elseif (v92>4) then local v183=v91[4 -2 ];local v184=v91[4];local v185=v183 + 2 ;local v186={v89[v183](v89[v183 + 1 ],v89[v185])};for v335=1,v184 do v89[v185 + v335 ]=v186[v335];end local v187=v186[1];if v187 then local v373=0;while true do if (v373==0) then v89[v185]=v187;v83=v91[3];break;end end else v83=v83 + (1 -0) ;end else local v188=0;local v189;local v190;while true do if (v188==0) then v189=v91[3];v190=v89[v189];v188=1;end if (1==v188) then for v430=v189 + 1 ,v91[4] do v190=v190   .. v89[v430] ;end v89[v91[2]]=v190;break;end end end elseif (v92<=8) then if (v92<=6) then local v136=v91[2];local v137=v89[v136];for v171=v136 + 1 ,v91[3] do v15(v137,v89[v171]);end elseif (v92==7) then for v338=v91[2],v91[3] do v89[v338]=nil;end elseif (v91[3 -1 ]<=v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=9) then local v138=v91[352 -(87 + 263) ];v89[v138](v21(v89,v138 + 1 ,v84));elseif (v92>10) then if v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else local v191=v91[2];local v192=v89[v191];local v193=v91[3];for v340=1,v193 do v192[v340]=v89[v191 + v340 ];end end elseif (v92<=17) then if (v92<=14) then if (v92<=12) then v89[v91[182 -(67 + 113) ]]=v91[3 + 0 ] + v89[v91[4]] ;elseif (v92>13) then if v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else local v194=0;local v195;while true do if (v194==0) then v195=v91[2];do return v89[v195](v21(v89,v195 + 1 ,v91[7 -4 ]));end break;end end end elseif (v92<=15) then v89[v91[2]]=v89[v91[3]]/v91[4] ;elseif (v92>16) then local v196=0;local v197;local v198;local v199;while true do if (v196==1) then v199={};v198=v18({},{[v7("\154\149\42\16\23\1\223","\49\197\202\67\126\115\100\167")]=function(v431,v432)local v433=0;local v434;while true do if (v433==0) then v434=v199[v432];return v434[1][v434[2]];end end end,[v7("\8\100\209\44\151\95\80\51\94\199","\62\87\59\191\73\224\54")]=function(v435,v436,v437)local v438=v199[v436];v438[3 -2 ][v438[2]]=v437;end});v196=2;end if (v196==2) then for v440=1,v91[4] do local v441=0;local v442;while true do if (v441==0) then v83=v83 + (953 -(802 + 150)) ;v442=v79[v83];v441=1;end if (v441==1) then if (v442[1]==86) then v199[v440-1 ]={v89,v442[3]};else v199[v440-(2 -1) ]={v72,v442[3]};end v88[ #v88 + 1 ]=v199;break;end end end v89[v91[2]]=v40(v197,v198,v73);break;end if (v196==0) then v197=v80[v91[3 + 0 ]];v198=nil;v196=1;end end else local v200=v91[2];local v201={v89[v200](v89[v200 + 1 ])};local v202=997 -(915 + 82) ;for v343=v200,v91[4] do local v344=0;while true do if (v344==0) then v202=v202 + 1 ;v89[v343]=v201[v202];break;end end end end elseif (v92<=20) then if (v92<=(50 -32)) then v89[v91[2 + 0 ]]={};elseif (v92==19) then local v203=v80[v91[3]];local v204;local v205={};v204=v18({},{[v7("\216\61\243\199\227\7\226","\169\135\98\154")]=function(v345,v346)local v347=v205[v346];return v347[1][v347[2]];end,[v7("\244\72\42\81\234\58\198\207\114\60","\168\171\23\68\52\157\83")]=function(v348,v349,v350)local v351=0;local v352;while true do if (v351==0) then v352=v205[v349];v352[1][v352[2]]=v350;break;end end end});for v353=1 -0 ,v91[1191 -(1069 + 118) ] do local v354=0;local v355;while true do if (1==v354) then if (v355[1]==86) then v205[v353-1 ]={v89,v355[3]};else v205[v353-1 ]={v72,v355[3]};end v88[ #v88 + 1 ]=v205;break;end if (v354==0) then v83=v83 + 1 ;v355=v79[v83];v354=1;end end end v89[v91[2]]=v40(v203,v204,v73);else local v207=v91[2];v89[v207](v21(v89,v207 + 1 ,v84));end elseif (v92<=22) then if (v92>21) then if (v89[v91[2]]<=v91[4]) then v83=v83 + 1 ;else v83=v91[3];end else v83=v91[3];end elseif (v92>23) then v89[v91[2]]=v89[v91[3]][v91[4]];else v89[v91[2]]=v89[v91[3]]%v91[4] ;end elseif (v92<=37) then if (v92<=30) then if (v92<=27) then if (v92<=25) then for v172=v91[2],v91[3] do v89[v172]=nil;end elseif (v92>26) then v89[v91[2]][v91[3]]=v91[4];else local v214=v91[2];local v215,v216=v82(v89[v214](v21(v89,v214 + 1 ,v91[3])));v84=(v216 + v214) -1 ;local v217=0;for v356=v214,v84 do v217=v217 + 1 ;v89[v356]=v215[v217];end end elseif (v92<=28) then local v142=0;local v143;local v144;while true do if (v142==1) then for v378=v143 + 1 ,v91[4] do v144=v144   .. v89[v378] ;end v89[v91[2]]=v144;break;end if (v142==0) then v143=v91[3];v144=v89[v143];v142=1;end end elseif (v92>29) then local v218=0;local v219;local v220;local v221;local v222;while true do if (v218==1) then v84=(v221 + v219) -1 ;v222=0;v218=2;end if (2==v218) then for v449=v219,v84 do local v450=0;while true do if (v450==0) then v222=v222 + 1 ;v89[v449]=v220[v222];break;end end end break;end if (v218==0) then v219=v91[4 -2 ];v220,v221=v82(v89[v219](v89[v219 + 1 ]));v218=1;end end elseif (v89[v91[2]]<=v91[4]) then v83=v83 + 1 ;else v83=v91[6 -3 ];end elseif (v92<=33) then if (v92<=31) then local v145=0;local v146;local v147;local v148;local v149;while true do if (0==v145) then v146=v91[2];v147,v148=v82(v89[v146](v21(v89,v146 + 1 ,v84)));v145=1;end if (v145==2) then for v380=v146,v84 do local v381=0;while true do if (v381==0) then v149=v149 + 1 ;v89[v380]=v147[v149];break;end end end break;end if (v145==1) then v84=(v148 + v146) -1 ;v149=0;v145=2;end end elseif (v92==32) then do return;end else local v223=0;local v224;while true do if (0==v223) then v224=v91[2];v89[v224]=v89[v224](v21(v89,v224 + 1 ,v84));break;end end end elseif (v92<=35) then if (v92>34) then local v225=0;local v226;local v227;local v228;local v229;while true do if (v225==1) then v84=(v228 + v226) -1 ;v229=0;v225=2;end if (v225==2) then for v451=v226,v84 do v229=v229 + 1 ;v89[v451]=v227[v229];end break;end if (v225==0) then v226=v91[2];v227,v228=v82(v89[v226](v21(v89,v226 + 1 ,v84)));v225=1;end end else local v230=0;local v231;local v232;local v233;local v234;while true do if (v230==0) then v231=v91[2];v232,v233=v82(v89[v231](v89[v231 + 1 + 0 ]));v230=1;end if (v230==2) then for v454=v231,v84 do v234=v234 + 1 ;v89[v454]=v232[v234];end break;end if (v230==1) then v84=(v233 + v231) -1 ;v234=0;v230=2;end end end elseif (v92>36) then v89[v91[3 -1 ]]=v89[v91[3]]%v91[4] ;else local v236=0;local v237;local v238;while true do if (v236==0) then v237=v91[2];v238=v89[v237];v236=1;end if (v236==1) then for v457=v237 + 1 ,v84 do v15(v238,v89[v457]);end break;end end end elseif (v92<=43) then if (v92<=40) then if (v92<=(38 + 0)) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==39) then if (v89[v91[2]]==v89[v91[4]]) then v83=v83 + (792 -(368 + 423)) ;else v83=v91[3];end else local v240=v91[2];v89[v240]=v89[v240](v21(v89,v240 + 1 ,v84));end elseif (v92<=41) then local v150=0;local v151;while true do if (v150==0) then v151=v91[6 -4 ];v89[v151]=v89[v151](v21(v89,v151 + 1 ,v91[3]));break;end end elseif (v92>42) then if (v89[v91[2]]~=v89[v91[22 -(10 + 8) ]]) then v83=v83 + 1 ;else v83=v91[3];end else local v242=0;local v243;local v244;while true do if (v242==1) then v89[v243 + 1 ]=v244;v89[v243]=v244[v91[446 -(416 + 26) ]];break;end if (v242==0) then v243=v91[7 -5 ];v244=v89[v91[3]];v242=1;end end end elseif (v92<=(146 -100)) then if (v92<=44) then v89[v91[2]]=v89[v91[2 + 1 ]]%v89[v91[4]] ;elseif (v92==45) then local v245=v91[2];v89[v245]=v89[v245](v89[v245 + 1 ]);else v89[v91[2]]=v89[v91[3]] * v91[4] ;end elseif (v92<=48) then if (v92>47) then local v248=v91[2];local v249={v89[v248](v21(v89,v248 + 1 ,v84))};local v250=0;for v365=v248,v91[6 -2 ] do local v366=0;while true do if (v366==0) then v250=v250 + 1 ;v89[v365]=v249[v250];break;end end end else local v251=0;local v252;local v253;local v254;while true do if (v251==1) then v254=v89[v252 + 2 ];if (v254>0) then if (v253>v89[v252 + 1 ]) then v83=v91[441 -(145 + 293) ];else v89[v252 + 3 ]=v253;end elseif (v253<v89[v252 + 1 ]) then v83=v91[3];else v89[v252 + 3 ]=v253;end break;end if (v251==0) then v252=v91[2];v253=v89[v252];v251=1;end end end elseif (v92>49) then v73[v91[3]]=v89[v91[2]];else local v257=0;local v258;local v259;local v260;while true do if (v257==1) then v260=0;for v460=v258,v91[4] do local v461=0;while true do if (v461==0) then v260=v260 + 1 ;v89[v460]=v259[v260];break;end end end break;end if (v257==0) then v258=v91[2];v259={v89[v258](v21(v89,v258 + 1 ,v84))};v257=1;end end end elseif (v92<=(1562 -(998 + 488))) then if (v92<=63) then if (v92<=56) then if (v92<=53) then if (v92<=51) then v89[v91[2]][v89[v91[3]]]=v91[4];elseif (v92>52) then local v261=v91[2];v89[v261]=v89[v261]();else v89[v91[2]][v89[v91[1 + 2 ]]]=v91[4];end elseif (v92<=54) then local v155=0;local v156;while true do if (v155==0) then v156=v91[2];v89[v156]=v89[v156](v89[v156 + 1 ]);break;end end elseif (v92>55) then if (v91[2]<=v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else local v265=0;local v266;while true do if (v265==0) then v266=v91[2];v89[v266](v89[v266 + 1 ]);break;end end end elseif (v92<=59) then if (v92<=57) then do return;end elseif (v92==58) then v89[v91[2]]= #v89[v91[3]];else local v268=0;local v269;while true do if (0==v268) then v269=v91[2];v89[v269](v89[v269 + 1 ]);break;end end end elseif (v92<=61) then if (v92>60) then local v270=v91[2];local v271=v89[v270 + 2 ];local v272=v89[v270] + v271 ;v89[v270]=v272;if (v271>0) then if (v272<=v89[v270 + 1 ]) then v83=v91[3];v89[v270 + 3 ]=v272;end elseif (v272>=v89[v270 + 1 ]) then v83=v91[3];v89[v270 + 3 ]=v272;end else local v274=0;local v275;local v276;local v277;while true do if (v274==1) then v277=v89[v275 + 2 ];if (v277>0) then if (v276>v89[v275 + 1 ]) then v83=v91[3];else v89[v275 + 3 ]=v276;end elseif (v276<v89[v275 + 1 ]) then v83=v91[3];else v89[v275 + 3 ]=v276;end break;end if (v274==0) then v275=v91[2];v276=v89[v275];v274=1;end end end elseif (v92==62) then local v278=v91[2];do return v21(v89,v278,v84);end else v89[v91[2]]=v73[v91[3]];end elseif (v92<=69) then if (v92<=66) then if (v92<=64) then if (v89[v91[2]]~=v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==65) then local v282=v91[2];local v283=v89[v91[3]];v89[v282 + 1 ]=v283;v89[v282]=v283[v91[4]];elseif (v89[v91[2]]~=v89[v91[4]]) then v83=v83 + 1 + 0 ;else v83=v91[3];end elseif (v92<=67) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==68) then v89[v91[774 -(201 + 571) ]][v89[v91[3]]]=v89[v91[4]];else v89[v91[1140 -(116 + 1022) ]]={};end elseif (v92<=72) then if (v92<=70) then v89[v91[2]]=v89[v91[3]]/v91[4] ;elseif (v92>71) then do return v89[v91[2]]();end else do return v89[v91[2]]();end end elseif (v92<=74) then if (v92>73) then v89[v91[2]]=v91[3] + v89[v91[4]] ;else local v292=0;local v293;while true do if (0==v292) then v293=v91[8 -6 ];do return v89[v293](v21(v89,v293 + 1 + 0 ,v91[10 -7 ]));end break;end end end elseif (v92==75) then local v294=0;local v295;local v296;local v297;while true do if (v294==1) then v297=0;for v466=v295,v91[4] do local v467=0;while true do if (0==v467) then v297=v297 + 1 ;v89[v466]=v296[v297];break;end end end break;end if (0==v294) then v295=v91[2];v296={v89[v295](v89[v295 + 1 ])};v294=1;end end else v89[v91[2]]=v72[v91[3]];end elseif (v92<=89) then if (v92<=82) then if (v92<=79) then if (v92<=77) then v89[v91[2]][v91[3]]=v91[4];elseif (v92>78) then v89[v91[2]]=v91[3];else local v302=v91[2];local v303,v304=v82(v89[v302](v21(v89,v302 + (3 -2) ,v91[3])));v84=(v304 + v302) -1 ;local v305=0;for v369=v302,v84 do v305=v305 + 1 ;v89[v369]=v303[v305];end end elseif (v92<=80) then v89[v91[2]]=v89[v91[3]] + v91[4] ;elseif (v92==81) then v83=v91[3];else v89[v91[2]]=v72[v91[3]];end elseif (v92<=85) then if (v92<=83) then local v161=v91[2];local v162=v91[4];local v163=v161 + 2 ;local v164={v89[v161](v89[v161 + 1 ],v89[v163])};for v174=860 -(814 + 45) ,v162 do v89[v163 + v174 ]=v164[v174];end local v165=v164[1];if v165 then local v309=0;while true do if (v309==0) then v89[v163]=v165;v83=v91[3];break;end end else v83=v83 + 1 ;end elseif (v92>84) then v89[v91[2]]=v73[v91[7 -4 ]];else local v312=0;local v313;while true do if (v312==0) then v313=v91[1 + 1 ];v89[v313]=v89[v313](v21(v89,v313 + 1 + 0 ,v91[3]));break;end end end elseif (v92<=87) then if (v92==86) then v89[v91[2]]=v89[v91[3]];else local v316=0;local v317;local v318;local v319;while true do if (v316==2) then if (v318>0) then if (v319<=v89[v317 + 1 ]) then local v491=0;while true do if (v491==0) then v83=v91[3];v89[v317 + 3 ]=v319;break;end end end elseif (v319>=v89[v317 + 1 ]) then local v492=0;while true do if (v492==0) then v83=v91[3];v89[v317 + 3 ]=v319;break;end end end break;end if (v316==0) then v317=v91[2];v318=v89[v317 + 2 ];v316=1;end if (v316==1) then v319=v89[v317] + v318 ;v89[v317]=v319;v316=2;end end end elseif (v92==88) then v89[v91[2]]=v89[v91[888 -(261 + 624) ]] * v91[4] ;else local v321=0;local v322;while true do if (v321==0) then v322=v91[2];do return v21(v89,v322,v84);end break;end end end elseif (v92<=95) then if (v92<=92) then if (v92<=90) then local v166=v91[3 -1 ];local v167=v89[v166];local v168=v91[3];for v177=1,v168 do v167[v177]=v89[v166 + v177 ];end elseif (v92>91) then v89[v91[2]]=v89[v91[3]][v91[4]];elseif (v89[v91[2]]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=93) then v89[v91[2]]=v89[v91[3]];elseif (v92==94) then v89[v91[2]]=v91[3];else v89[v91[2]][v89[v91[3]]]=v89[v91[4]];end elseif (v92<=98) then if (v92<=96) then if (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92>97) then v89[v91[2]]= #v89[v91[1083 -(1020 + 60) ]];else v73[v91[3]]=v89[v91[2]];end elseif (v92<=100) then if (v92==99) then if (v89[v91[1425 -(630 + 793) ]]~=v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v89[v91[2]]==v91[13 -9 ]) then v83=v83 + (4 -3) ;else v83=v91[3];end elseif (v92>101) then local v333=v91[2];v89[v333]=v89[v333]();elseif (v91[2]==v89[v91[4]]) then v83=v83 + 1 + 0 ;else v83=v91[3];end v83=v83 + (3 -2) ;break;end if (v99==0) then v91=v79[v83];v92=v91[118 -(32 + 85) ];v99=1;end end end end;end return v40(v39(),{},v28)(...);end vv17(),...);
